{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ProfessorService {\n  constructor() {\n    this.profs = [{\n      vorname: 'Thomas',\n      nachname: 'Specht',\n      kuerzel: 'SPE'\n    }, {\n      vorname: 'Michael',\n      nachname: 'Groeschel',\n      kuerzel: 'GRM'\n    }];\n  }\n  getProfessoren() {\n    return this.profs;\n  }\n  getProfessor(kuerzel) {\n    for (const prof of this.profs) {\n      if (prof.kuerzel === kuerzel) {\n        return prof;\n      }\n    }\n    return undefined;\n  }\n  create(professor) {\n    this.profs.push(professor);\n    return professor;\n  }\n  update(professor) {\n    for (const prof of this.profs) {\n      if (prof.kuerzel === professor.kuerzel) {\n        prof.vorname = professor.vorname;\n        prof.nachname = professor.nachname;\n        prof.kuerzel = professor.kuerzel;\n      }\n    }\n    return professor;\n  }\n}\nProfessorService.ɵfac = function ProfessorService_Factory(t) {\n  return new (t || ProfessorService)();\n};\nProfessorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfessorService,\n  factory: ProfessorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProfessorService","constructor","profs","vorname","nachname","kuerzel","getProfessoren","getProfessor","prof","undefined","create","professor","push","update","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Julian\\Desktop\\Angular und Nodejs\\ANO-Professorenverwaltung3\\src\\app\\Professorenverwaltung\\Professor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Professor } from './Professor';\n\n@Injectable({\n  providedIn: 'root'\n  })\n  export class ProfessorService {\n  profs: Professor[] = [\n  {vorname: 'Thomas', nachname: 'Specht', kuerzel: 'SPE'},\n  {vorname: 'Michael', nachname: 'Groeschel', kuerzel: 'GRM'}\n  ];\n  constructor() { }\n\n\n  getProfessoren(): Professor[] {\n  return this.profs;\n  }\n\n  getProfessor(kuerzel: string): Professor | undefined {\n    for (const prof of this.profs) {\n    if (prof.kuerzel === kuerzel) {\n    return prof;\n    }\n    }\n    return undefined;\n    }\n\n    create(professor: Professor): Professor {\n      this.profs.push(professor);\n      return professor;\n      }\n\n\n      update(professor: Professor): Professor {\n        for (const prof of this.profs) {\n        if (prof.kuerzel === professor.kuerzel) {\n        prof.vorname = professor.vorname;\n        prof.nachname = professor.nachname;\n        prof.kuerzel = professor.kuerzel;\n        }\n        }\n        return professor;\n        }\n\n  }\n"],"mappings":";AAME,OAAM,MAAOA,gBAAgB;EAK7BC,YAAA;IAJA,KAAAC,KAAK,GAAgB,CACrB;MAACC,OAAO,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAK,CAAC,EACvD;MAACF,OAAO,EAAE,SAAS;MAAEC,QAAQ,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAK,CAAC,CAC1D;EACe;EAGhBC,cAAcA,CAAA;IACd,OAAO,IAAI,CAACJ,KAAK;EACjB;EAEAK,YAAYA,CAACF,OAAe;IAC1B,KAAK,MAAMG,IAAI,IAAI,IAAI,CAACN,KAAK,EAAE;MAC/B,IAAIM,IAAI,CAACH,OAAO,KAAKA,OAAO,EAAE;QAC9B,OAAOG,IAAI;;;IAGX,OAAOC,SAAS;EAChB;EAEAC,MAAMA,CAACC,SAAoB;IACzB,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,SAAS,CAAC;IAC1B,OAAOA,SAAS;EAChB;EAGAE,MAAMA,CAACF,SAAoB;IACzB,KAAK,MAAMH,IAAI,IAAI,IAAI,CAACN,KAAK,EAAE;MAC/B,IAAIM,IAAI,CAACH,OAAO,KAAKM,SAAS,CAACN,OAAO,EAAE;QACxCG,IAAI,CAACL,OAAO,GAAGQ,SAAS,CAACR,OAAO;QAChCK,IAAI,CAACJ,QAAQ,GAAGO,SAAS,CAACP,QAAQ;QAClCI,IAAI,CAACH,OAAO,GAAGM,SAAS,CAACN,OAAO;;;IAGhC,OAAOM,SAAS;EAChB;;AApCOX,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;SAAhBA,gBAAgB;EAAAc,OAAA,EAAhBd,gBAAgB,CAAAe,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}