{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {\n    this._loggedIn = false;\n    this._loggedInAs = undefined;\n    this.redirectUrl = '/'; // Default-Pfad, falls Login-Dialog direkt aufgerufen\n  }\n  /*  constructor(private benutzerService: BenutzerService) { } */\n  // Anmerkung: BenutzerService + Benutzerverwaltung nicht auf Folien\n  get isLoggedIn() {\n    return this._loggedIn;\n  }\n  get loggedInAs() {\n    return this._loggedInAs;\n  }\n  login(loginAccount, passwort) {\n    /*  this._loggedIn = this.benutzerService.pruefePasswort(loginAccount, passwort); */\n    this._loggedIn = loginAccount === 'specht' && passwort === 'spe';\n    if (this._loggedIn) {\n      this._loggedInAs = loginAccount;\n    } else {\n      this._loggedInAs = undefined;\n    }\n    return this._loggedIn;\n  }\n  logout() {\n    this._loggedIn = false;\n    this._loggedInAs = undefined;\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginService","constructor","_loggedIn","_loggedInAs","undefined","redirectUrl","isLoggedIn","loggedInAs","login","loginAccount","passwort","logout","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Julian\\Desktop\\Angular und Nodejs\\ANO-Professorenverwaltung3\\src\\app\\LogInOut\\Login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private _loggedIn: boolean = false;\n  private _loggedInAs: string | undefined = undefined;\n  redirectUrl: string = '/'; // Default-Pfad, falls Login-Dialog direkt aufgerufen\n  constructor() { }\n  /*  constructor(private benutzerService: BenutzerService) { } */\n  // Anmerkung: BenutzerService + Benutzerverwaltung nicht auf Folien\n  get isLoggedIn(): boolean {\n    return this._loggedIn;\n  }\n  get loggedInAs(): string | undefined {\n    return this._loggedInAs;\n  }\n  login(loginAccount: string, passwort: string): boolean {\n    /*  this._loggedIn = this.benutzerService.pruefePasswort(loginAccount, passwort); */\n    this._loggedIn = loginAccount === 'specht' && passwort === 'spe';\n    if (this._loggedIn) {\n      this._loggedInAs = loginAccount;\n    } else {\n      this._loggedInAs = undefined;\n    }\n    return this._loggedIn;\n  }\n  logout(): void {\n    this._loggedIn = false;\n    this._loggedInAs = undefined;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,WAAW,GAAuBC,SAAS;IACnD,KAAAC,WAAW,GAAW,GAAG,CAAC,CAAC;EACX;EAChB;EACA;EACA,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACJ,SAAS;EACvB;EACA,IAAIK,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACJ,WAAW;EACzB;EACAK,KAAKA,CAACC,YAAoB,EAAEC,QAAgB;IAC1C;IACA,IAAI,CAACR,SAAS,GAAGO,YAAY,KAAK,QAAQ,IAAIC,QAAQ,KAAK,KAAK;IAChE,IAAI,IAAI,CAACR,SAAS,EAAE;MAClB,IAAI,CAACC,WAAW,GAAGM,YAAY;KAChC,MAAM;MACL,IAAI,CAACN,WAAW,GAAGC,SAAS;;IAE9B,OAAO,IAAI,CAACF,SAAS;EACvB;EACAS,MAAMA,CAAA;IACJ,IAAI,CAACT,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,WAAW,GAAGC,SAAS;EAC9B;;AA1BWJ,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}