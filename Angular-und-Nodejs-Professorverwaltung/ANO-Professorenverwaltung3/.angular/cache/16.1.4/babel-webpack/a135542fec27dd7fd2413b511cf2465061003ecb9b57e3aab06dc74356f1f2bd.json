{"ast":null,"code":"import { cloneProfessor, equalsProfessor } from '../Professor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../Professor.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ProfessorAendernComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 2);\n    i0.ɵɵtext(2, \"Vorname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfessorAendernComponent_div_2_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.professor.vorname = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 4);\n    i0.ɵɵtext(5, \"Nachname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfessorAendernComponent_div_2_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.professor.nachname = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 6);\n    i0.ɵɵtext(8, \"K\\u00FCrzel:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfessorAendernComponent_div_2_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.professor.kuerzel = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.professor.vorname);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.professor.nachname);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.professor.kuerzel);\n  }\n}\nfunction ProfessorAendernComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ProfessorAendernComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.update(ctx_r6.professor));\n    });\n    i0.ɵɵtext(1, \"Speichern\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ProfessorAendernComponent {\n  constructor(router, route, professorService) {\n    this.router = router;\n    this.route = route;\n    this.professorService = professorService;\n    this.aenderungenGespeichert = false;\n  }\n  ngOnInit() {\n    const routeSnapshot = this.route.snapshot;\n    const kuerzel = routeSnapshot.params['kuerzel'];\n    if (kuerzel) {\n      this.professorService.getProfessor(kuerzel).subscribe(professor => {\n        if (professor) {\n          this.oriProfessor = professor;\n          this.professor = cloneProfessor(this.oriProfessor);\n        } else {\n          this.router.navigateByUrl('/list');\n        }\n      });\n    } else {\n      this.router.navigateByUrl('/list');\n    }\n  }\n  update(professor) {\n    this.professorService.update(professor).subscribe(prof => {\n      this.aenderungenGespeichert = true;\n      this.router.navigate(['../../'], {\n        relativeTo: this.route\n      });\n    });\n  }\n  hatUngespeicherteAenderungen() {\n    if (this.professor && this.oriProfessor) {\n      return !this.aenderungenGespeichert && !equalsProfessor(this.professor, this.oriProfessor);\n    } else {\n      return false;\n    }\n  }\n}\nProfessorAendernComponent.ɵfac = function ProfessorAendernComponent_Factory(t) {\n  return new (t || ProfessorAendernComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProfessorService));\n};\nProfessorAendernComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfessorAendernComponent,\n  selectors: [[\"app-ProfessorAendern\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [\"for\", \"vorname\"], [\"id\", \"vorname\", \"placeholder\", \"vorname\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nachname\"], [\"id\", \"nachname\", \"placeholder\", \"nachname\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"kuerzel\"], [\"id\", \"kuerzel\", \"placeholder\", \"kuerzel\", \"readonly\", \"readonly\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function ProfessorAendernComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Professor \\u00E4ndern\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ProfessorAendernComponent_div_2_Template, 10, 3, \"div\", 0);\n      i0.ɵɵtemplate(3, ProfessorAendernComponent_button_3_Template, 2, 0, \"button\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.professor);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.professor);\n    }\n  },\n  dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["cloneProfessor","equalsProfessor","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProfessorAendernComponent_div_2_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","professor","vorname","ProfessorAendernComponent_div_2_Template_input_ngModelChange_6_listener","ctx_r4","nachname","ProfessorAendernComponent_div_2_Template_input_ngModelChange_9_listener","ctx_r5","kuerzel","ɵɵadvance","ɵɵproperty","ctx_r0","ProfessorAendernComponent_button_3_Template_button_click_0_listener","_r7","ctx_r6","update","ProfessorAendernComponent","constructor","router","route","professorService","aenderungenGespeichert","ngOnInit","routeSnapshot","snapshot","params","getProfessor","subscribe","oriProfessor","navigateByUrl","prof","navigate","relativeTo","hatUngespeicherteAenderungen","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","ProfessorService","selectors","decls","vars","consts","template","ProfessorAendernComponent_Template","rf","ctx","ɵɵtemplate","ProfessorAendernComponent_div_2_Template","ProfessorAendernComponent_button_3_Template"],"sources":["C:\\Users\\Julian\\Desktop\\Angular und Nodejs\\ANO-Professorenverwaltung3\\src\\app\\Professorenverwaltung\\ProfessorAendern\\ProfessorAendern.component.ts","C:\\Users\\Julian\\Desktop\\Angular und Nodejs\\ANO-Professorenverwaltung3\\src\\app\\Professorenverwaltung\\ProfessorAendern\\ProfessorAendern.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Professor, cloneProfessor, equalsProfessor } from '../Professor';\nimport { Router, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { ProfessorService } from '../Professor.service';\nimport { AenderungenSpeichernInterface } from 'src/app/AenderungenSpeichern/AenderungenSpeichern';\n\n@Component({\n  selector: 'app-ProfessorAendern',\n  templateUrl: './ProfessorAendern.component.html',\n  styleUrls: ['./ProfessorAendern.component.css']\n})\n\nexport class ProfessorAendernComponent implements\n  OnInit, AenderungenSpeichernInterface {\n  professor: Professor | undefined;\n  oriProfessor: Professor | undefined;\n  aenderungenGespeichert: boolean = false;\n  constructor(private router: Router, private route: ActivatedRoute,\n    private professorService: ProfessorService) { }\n\n  ngOnInit() {\n    const routeSnapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const kuerzel: string | null = routeSnapshot.params['kuerzel'];\n    if (kuerzel) {\n      this.professorService.getProfessor(kuerzel).subscribe(\n        (professor: Professor) => {\n          if (professor) {\n            this.oriProfessor = professor;\n            this.professor = cloneProfessor(this.oriProfessor);\n          } else {\n            this.router.navigateByUrl('/list');\n          }\n        }\n      );\n    } else {\n      this.router.navigateByUrl('/list');\n    }\n  }\n\n  update(professor: Professor): void {\n    this.professorService.update(professor).subscribe(\n      (prof: Professor) => {\n        this.aenderungenGespeichert = true;\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      }\n    );\n  }\n  hatUngespeicherteAenderungen(): boolean {\n    if (this.professor && this.oriProfessor) {\n      return !this.aenderungenGespeichert &&\n        !equalsProfessor(this.professor, this.oriProfessor);\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n\n\n\n// alt, ohne rest api\n/* export class ProfessorAendernComponent implements OnInit,\n  AenderungenSpeichernInterface {\n  professor: Professor | undefined;\n  oriProfessor: Professor | undefined;\n  aenderungenGespeichert: boolean = false;\n  constructor(private router: Router, private route: ActivatedRoute, private professorService: ProfessorService) { }\n\n  ngOnInit() {\n    const routeSnapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const kuerzel: string | null = routeSnapshot.params['kuerzel'];\n    this.oriProfessor = kuerzel ? this.professorService.getProfessor(kuerzel) : undefined;\n    if (this.oriProfessor) {\n      this.professor = cloneProfessor(this.oriProfessor); // Um Änderungen feststellen zu können\n    } else {\n      this.router.navigateByUrl('/list');\n    }\n  }\n  update(professor: Professor): void {\n    this.professorService.update(professor);\n    this.aenderungenGespeichert = true;\n    this.router.navigate(['../../'], { relativeTo: this.route });\n  }\n\n  hatUngespeicherteAenderungen(): boolean {\n    if (this.professor && this.oriProfessor) {\n      return !this.aenderungenGespeichert &&\n        !equalsProfessor(this.professor, this.oriProfessor);\n    } else {\n      return false;\n    }\n  }\n} */\n\n\n\n/* export class ProfessorAendernComponent implements OnInit {\n\n  professor: Professor | undefined;\n\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private professorService: ProfessorService) { }\n\n  ngOnInit() {\n\n    const routeSnapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const kuerzel: string | null = routeSnapshot.params['kuerzel'];\n    if (kuerzel) {\n      this.professor = this.professorService.getProfessor(kuerzel);\n    } else {\n      this.router.navigate(['../../'], {relativeTo: this.route});\n    }\n  }\n  update(professor: Professor): void {\n    this.professorService.update(professor);\n    this.router.navigate(['../../'], {relativeTo: this.route});\n\n  }\n} */\n/* this.router.navigateByUrl('/list'); */\n","<h2>Professor ändern</h2>\n<div *ngIf=\"professor\">\n    <label for=\"vorname\">Vorname:</label>\n    <input [(ngModel)]=\"professor.vorname\" id=\"vorname\" placeholder=\"vorname\">\n    <label for=\"nachname\">Nachname:</label>\n    <input [(ngModel)]=\"professor.nachname\" id=\"nachname\" placeholder=\"nachname\">\n    <label for=\"kuerzel\">Kürzel:</label>\n    <input [(ngModel)]=\"professor.kuerzel\" id=\"kuerzel\" placeholder=\"kuerzel\" readonly=\"readonly\">\n\n</div>\n<button *ngIf=\"professor\" (click)=\"update(professor)\">Speichern</button>"],"mappings":"AACA,SAAoBA,cAAc,EAAEC,eAAe,QAAQ,cAAc;;;;;;;;;ICAzEC,EAAA,CAAAC,cAAA,UAAuB;IACED,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACrCH,EAAA,CAAAC,cAAA,eAA0E;IAAnED,EAAA,CAAAI,UAAA,2BAAAC,wEAAAC,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,SAAA,CAAAC,OAAA,GAAAP,MAAA,CAAyB;IAAA,EAAP;IAAtCN,EAAA,CAAAG,YAAA,EAA0E;IAC1EH,EAAA,CAAAC,cAAA,eAAsB;IAAAD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACvCH,EAAA,CAAAC,cAAA,eAA6E;IAAtED,EAAA,CAAAI,UAAA,2BAAAU,wEAAAR,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAO,MAAA,GAAAf,EAAA,CAAAU,aAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAI,MAAA,CAAAH,SAAA,CAAAI,QAAA,GAAAV,MAAA,CAA0B;IAAA,EAAP;IAAvCN,EAAA,CAAAG,YAAA,EAA6E;IAC7EH,EAAA,CAAAC,cAAA,eAAqB;IAAAD,EAAA,CAAAE,MAAA,mBAAO;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACpCH,EAAA,CAAAC,cAAA,eAA8F;IAAvFD,EAAA,CAAAI,UAAA,2BAAAa,wEAAAX,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAU,MAAA,GAAAlB,EAAA,CAAAU,aAAA;MAAA,OAAaV,EAAA,CAAAW,WAAA,CAAAO,MAAA,CAAAN,SAAA,CAAAO,OAAA,GAAAb,MAAA,CAAyB;IAAA,EAAP;IAAtCN,EAAA,CAAAG,YAAA,EAA8F;;;;IAJvFH,EAAA,CAAAoB,SAAA,GAA+B;IAA/BpB,EAAA,CAAAqB,UAAA,YAAAC,MAAA,CAAAV,SAAA,CAAAC,OAAA,CAA+B;IAE/Bb,EAAA,CAAAoB,SAAA,GAAgC;IAAhCpB,EAAA,CAAAqB,UAAA,YAAAC,MAAA,CAAAV,SAAA,CAAAI,QAAA,CAAgC;IAEhChB,EAAA,CAAAoB,SAAA,GAA+B;IAA/BpB,EAAA,CAAAqB,UAAA,YAAAC,MAAA,CAAAV,SAAA,CAAAO,OAAA,CAA+B;;;;;;IAG1CnB,EAAA,CAAAC,cAAA,gBAAsD;IAA5BD,EAAA,CAAAI,UAAA,mBAAAmB,oEAAA;MAAAvB,EAAA,CAAAO,aAAA,CAAAiB,GAAA;MAAA,MAAAC,MAAA,GAAAzB,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAb,SAAA,CAAiB;IAAA,EAAC;IAACZ,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADExE,OAAM,MAAOwB,yBAAyB;EAKpCC,YAAoBC,MAAc,EAAUC,KAAqB,EACvDC,gBAAkC;IADxB,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IACvC,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAF1B,KAAAC,sBAAsB,GAAY,KAAK;EAES;EAEhDC,QAAQA,CAAA;IACN,MAAMC,aAAa,GAA2B,IAAI,CAACJ,KAAK,CAACK,QAAQ;IACjE,MAAMhB,OAAO,GAAkBe,aAAa,CAACE,MAAM,CAAC,SAAS,CAAC;IAC9D,IAAIjB,OAAO,EAAE;MACX,IAAI,CAACY,gBAAgB,CAACM,YAAY,CAAClB,OAAO,CAAC,CAACmB,SAAS,CAClD1B,SAAoB,IAAI;QACvB,IAAIA,SAAS,EAAE;UACb,IAAI,CAAC2B,YAAY,GAAG3B,SAAS;UAC7B,IAAI,CAACA,SAAS,GAAGd,cAAc,CAAC,IAAI,CAACyC,YAAY,CAAC;SACnD,MAAM;UACL,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,OAAO,CAAC;;MAEtC,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACX,MAAM,CAACW,aAAa,CAAC,OAAO,CAAC;;EAEtC;EAEAd,MAAMA,CAACd,SAAoB;IACzB,IAAI,CAACmB,gBAAgB,CAACL,MAAM,CAACd,SAAS,CAAC,CAAC0B,SAAS,CAC9CG,IAAe,IAAI;MAClB,IAAI,CAACT,sBAAsB,GAAG,IAAI;MAClC,IAAI,CAACH,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAAEC,UAAU,EAAE,IAAI,CAACb;MAAK,CAAE,CAAC;IAC9D,CAAC,CACF;EACH;EACAc,4BAA4BA,CAAA;IAC1B,IAAI,IAAI,CAAChC,SAAS,IAAI,IAAI,CAAC2B,YAAY,EAAE;MACvC,OAAO,CAAC,IAAI,CAACP,sBAAsB,IACjC,CAACjC,eAAe,CAAC,IAAI,CAACa,SAAS,EAAE,IAAI,CAAC2B,YAAY,CAAC;KACtD,MAAM;MACL,OAAO,KAAK;;EAEhB;;AA1CWZ,yBAAyB,C;mBAAzBA,yBAAyB,EAAA3B,EAAA,CAAA6C,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAA/C,EAAA,CAAA6C,iBAAA,CAAAC,EAAA,CAAAE,cAAA,GAAAhD,EAAA,CAAA6C,iBAAA,CAAAI,EAAA,CAAAC,gBAAA;AAAA;AAAzBvB,yBAAyB,C;QAAzBA,yBAAyB;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZtCzD,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,4BAAgB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACzBH,EAAA,CAAA2D,UAAA,IAAAC,wCAAA,kBAQM;MACN5D,EAAA,CAAA2D,UAAA,IAAAE,2CAAA,oBAAwE;;;MATlE7D,EAAA,CAAAoB,SAAA,GAAe;MAAfpB,EAAA,CAAAqB,UAAA,SAAAqC,GAAA,CAAA9C,SAAA,CAAe;MASZZ,EAAA,CAAAoB,SAAA,GAAe;MAAfpB,EAAA,CAAAqB,UAAA,SAAAqC,GAAA,CAAA9C,SAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}