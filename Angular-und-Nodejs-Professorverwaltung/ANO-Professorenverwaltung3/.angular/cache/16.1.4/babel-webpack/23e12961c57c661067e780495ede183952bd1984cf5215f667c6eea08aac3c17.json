{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./Login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthentifizierungGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  checkLogin(url) {\n    if (this.loginService.isLoggedIn) {\n      return true;\n    } else {\n      this.loginService.redirectUrl = url; // Aufruf-URL merken, um später dorthin zurückzunavigieren\n      this.router.navigate(['/login']); // Auf LoginComponent umleiten\n      return false;\n    }\n  }\n  canActivate(route, state) {\n    const url = state.url;\n    return this.checkLogin(url);\n  }\n  canActivateChild(childRoute, state) {\n    const url = state.url;\n    return this.checkLogin(url);\n  }\n}\nAuthentifizierungGuard.ɵfac = function AuthentifizierungGuard_Factory(t) {\n  return new (t || AuthentifizierungGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthentifizierungGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthentifizierungGuard,\n  factory: AuthentifizierungGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthentifizierungGuard","constructor","loginService","router","checkLogin","url","isLoggedIn","redirectUrl","navigate","canActivate","route","state","canActivateChild","childRoute","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Julian\\Desktop\\Angular und Nodejs\\ANO-Professorenverwaltung3\\src\\app\\LogInOut\\authentifizierung.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanActivateFn, Router, RouterStateSnapshot } from '@angular/router';\nimport { LoginService } from './Login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthentifizierungGuard implements CanActivate, CanActivateChild {\n  constructor(private loginService: LoginService, private router: Router) { }\n  checkLogin(url: string): boolean {\n    if (this.loginService.isLoggedIn) {\n      return true;\n    } else {\n      this.loginService.redirectUrl = url; // Aufruf-URL merken, um später dorthin zurückzunavigieren\n      this.router.navigate(['/login']); // Auf LoginComponent umleiten\n      return false;\n    }\n  }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAC1EC,UAAUA,CAACC,GAAW;IACpB,IAAI,IAAI,CAACH,YAAY,CAACI,UAAU,EAAE;MAChC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,YAAY,CAACK,WAAW,GAAGF,GAAG,CAAC,CAAC;MACrC,IAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK;;EAEhB;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMN,GAAG,GAAWM,KAAK,CAACN,GAAG;IAC7B,OAAO,IAAI,CAACD,UAAU,CAACC,GAAG,CAAC;EAC7B;EACAO,gBAAgBA,CAACC,UAAkC,EAAEF,KAA0B;IAC7E,MAAMN,GAAG,GAAWM,KAAK,CAACN,GAAG;IAC7B,OAAO,IAAI,CAACD,UAAU,CAACC,GAAG,CAAC;EAC7B;;AAlBWL,sBAAsB,C;mBAAtBA,sBAAsB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAtBnB,sBAAsB,C;SAAtBA,sBAAsB;EAAAoB,OAAA,EAAtBpB,sBAAsB,CAAAqB,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}